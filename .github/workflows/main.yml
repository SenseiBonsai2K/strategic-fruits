name: Actions 😎

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
#  test:
#    name: Testing Strategic Fruits 🧪
#    runs-on: ubuntu-latest
#    timeout-minutes: 360
#    strategy:
#      fail-fast: false
#      matrix:
#        projectPath:
#          - '.'
#        unityVersion:
#          - 2022.3.33f1
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Create LFS file list
#        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
#
#      - name: Restore LFS cache
#        uses: actions/cache@v3
#        id: lfs-cache
#        with:
#          path: .git/lfs
#          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
#
#      - name: Git LFS Pull
#        run: |
#          git lfs pull
#          git add .
#          git reset --hard
#
#      - uses: actions/cache@v3
#        with:
#          path: Library
#          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
#          restore-keys: |
#            Library-
#
#      - uses: game-ci/unity-test-runner@v4
#        env:
#          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
#          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
#          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
#        with:
#          projectPath: ${{ matrix.projectPath }}
#          unityVersion: ${{ matrix.unityVersion }}
#          githubToken: ${{ secrets.GITHUB_TOKEN }}

  build:
#    needs: test
    name: Build for WebGL ✨
    timeout-minutes: 360
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - '.'
        unityVersion:
          - 2022.3.33f1
        targetPlatform:
          - WebGL
    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: WebGL
          versioning: Semantic

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4