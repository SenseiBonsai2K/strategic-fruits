name: Actions 😎

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Test for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath: [ 'strategic-fruits' ]
        unityVersion: [ '2022.3.33f1' ]
        targetPlatform: [ 'StandaloneLinux64', 'WebGL', 'StandaloneWindows', 'StandaloneWindows64', 'StandaloneOSX' ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d ' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - name: Unity Activate
        uses: game-ci/unity-activate@v2.0.0
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - uses: game-ci/unity-test-runner@v4.3.0
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.TOKEN_GITHUB }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  build:
    needs: test
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath: [ 'strategic-fruits' ]
        unityVersion: [ '2022.3.33f1' ]
        targetPlatform: [ 'StandaloneLinux64', 'WebGL', 'StandaloneWindows', 'StandaloneWindows64', 'StandaloneOSX' ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic

      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build-${{ matrix.targetPlatform }}
  
  deployPages:
    needs: build
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: Build-WedGL
          path: build-WebGL

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: build-WebGL